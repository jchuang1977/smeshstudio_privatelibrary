
/*
 * Copyright (c) 2011-2012 SmeshLink Technology Corporation.
 * All rights reserved.
 *
 * $Id: sensors-web.c $
 */

/**
 * \file
 *         A web interface for accessing sensor data including light, temperature,
 *         voltage, ds2411x, etc.
 * \author
 *         SmeshLink
 */
#ifdef __cplusplus
extern "C" {
#endif
#include "contiki.h"
#include "contiki-net.h"
#include "rest.h"
#include "dev/leds.h"
//#include "dev/adc-sensors.h"
#include "dev/ds2401.h"
#include <stdio.h>
#ifdef __cplusplus
}
#endif
/*---------------------------------------------------------------------------*/
PROCESS(rest_example, "Sensors Web");
AUTOSTART_PROCESSES(&rest_example);
/*---------------------------------------------------------------------------*/
char temp[100];

RESOURCE(sensors, METHOD_GET, "sensors");
void
sensors_handler(REQUEST* request, RESPONSE* response)
{
	int index = 0, ii;
//	int16_t light, temperature;
//	double voltage;
//
//	light = sensor_light_get();
//	temperature = sensor_temp_get(TEMP_UNIT_CELCIUS);
//	voltage = voltage_get();
//
//	index += sprintf(temp + index, "Light: %d\n", light);
//	index += sprintf(temp + index, "Temperature: %d.%d C\n", temperature/100,temperature-(temperature/100)*100);
//	index += sprintf(temp + index, "Voltage: %d mv\n", (int)(voltage * (double)1000));

	//ds2401_init();
	index += sprintf(temp + index, "ds2411:");
	for (ii = 0; ii < 8; ii++) {
		index += sprintf(temp + index, " %02x", ds2401_id[ii]);
	}

	rest_set_header_content_type(response, TEXT_PLAIN);
	rest_set_response_payload(response, (uint8_t*)temp, strlen(temp));
}

RESOURCE(led, (method_t)(METHOD_GET|METHOD_POST | METHOD_PUT), "led");
void
led_handler(REQUEST* request, RESPONSE* response)
{
	char color[10];
	char mode[10];
	uint8_t led = 0;
	int success = 1;
	if (rest_get_query_variable(request, "color", color, 10)) {
		if (!strcmp(color,"red")) {
			led = LEDS_RED;
		} else if(!strcmp(color,"green")) {
			led = LEDS_GREEN;
		} else if ( !strcmp(color,"blue") ) {
			led = LEDS_BLUE;
		} else {
			success = 0;
		}
	} else {
		success = 0;
	}
	if (success && rest_get_query_variable(request, "mode", mode, 10)) {

		if (!strcmp(mode, "on")) {
			leds_on(led);
		} else if (!strcmp(mode, "off")) {
			leds_off(led);
		} else {
			success = 0;
		}
	} else {
		success = 0;
	}
	int index = 0;
	index += sprintf(temp + index, "led is %s,mode is %s \n", color,mode);
	rest_set_header_content_type(response, TEXT_PLAIN);
	rest_set_response_payload(response, (uint8_t*)temp, strlen(temp));
}
/*---------------------------------------------------------------------------*/
PROCESS_THREAD(rest_example, ev, data)
{
	PROCESS_BEGIN();

	rest_init();
	rest_activate_resource(&resource_sensors);
	rest_activate_resource(&resource_led);

	PROCESS_END();
}
/*---------------------------------------------------------------------------*/
